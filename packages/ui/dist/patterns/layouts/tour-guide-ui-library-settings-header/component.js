"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Save, Settings, Activity, Clock, Users, HardDrive } from "lucide-react";
export default function SettingsHeader({ stats }) {
    const formatDate = (dateString) => {
        return new Date(dateString).toLocaleDateString("en-US", {
            month: "short",
            day: "numeric",
            hour: "2-digit",
            minute: "2-digit"
        });
    };
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center space-x-2 text-sm text-gray-400", children: [_jsx("span", { children: "Admin" }), _jsx("span", { children: "/" }), _jsx("span", { className: "text-orange-500", children: "Settings Management" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-3xl font-bold text-white", children: "Settings Management" }), _jsx("p", { className: "mt-1 text-gray-400", children: "Configure system settings, permissions, and site preferences" })] }), _jsx("div", { className: "flex space-x-3", children: _jsxs(Button, { className: "bg-orange-600 text-white hover:bg-orange-700", children: [_jsx(Save, { className: "mr-2 size-4" }), "Save All Changes"] }) })] }), _jsxs("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-6", children: [_jsxs(Card, { className: "border-gray-700 bg-gray-800", children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium text-gray-400", children: "Active Settings" }), _jsx(Settings, { className: "size-4 text-orange-500" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold text-white", children: stats.activeSettings }), _jsx("p", { className: "text-xs text-gray-500", children: "Configured settings" })] })] }), _jsxs(Card, { className: "border-gray-700 bg-gray-800", children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium text-gray-400", children: "Recent Changes" }), _jsx(Clock, { className: "size-4 text-blue-500" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold text-white", children: stats.recentChanges }), _jsx("p", { className: "text-xs text-gray-500", children: "Last 7 days" })] })] }), _jsxs(Card, { className: "border-gray-700 bg-gray-800", children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium text-gray-400", children: "System Health" }), _jsx(Activity, { className: "size-4 text-green-500" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold text-white", children: [stats.systemHealth, "%"] }), _jsx("p", { className: "text-xs text-gray-500", children: "All systems operational" })] })] }), _jsxs(Card, { className: "border-gray-700 bg-gray-800", children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium text-gray-400", children: "Last Backup" }), _jsx(HardDrive, { className: "size-4 text-purple-500" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold text-white", children: formatDate(stats.lastBackup) }), _jsx("p", { className: "text-xs text-gray-500", children: "Automatic backup" })] })] }), _jsxs(Card, { className: "border-gray-700 bg-gray-800", children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium text-gray-400", children: "Total Users" }), _jsx(Users, { className: "size-4 text-cyan-500" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold text-white", children: stats.totalUsers.toLocaleString() }), _jsx("p", { className: "text-xs text-gray-500", children: "Registered users" })] })] }), _jsxs(Card, { className: "border-gray-700 bg-gray-800", children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium text-gray-400", children: "Storage Used" }), _jsx(HardDrive, { className: "size-4 text-yellow-500" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold text-white", children: [stats.storageUsed, "%"] }), _jsx("p", { className: "text-xs text-gray-500", children: "Of allocated space" })] })] })] })] }));
}
//# sourceMappingURL=component.js.map