import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button } from "@/components/ui/button";
import Link from "next/link";
import { ExternalLink } from "lucide-react";
const SubmissionCard = ({ submission, onManage, onEditDemo, onSetDefaultDemo, }) => {
    // Supabase URLs
    const componentSupabaseUrl = `https://supabase.com/dashboard/project/vucvdpamtrjkzmubwlts/editor/29179?sort=created_at%3Adesc&filter=id%3Aeq%3A${submission.component_data.id}`;
    const demoSupabaseUrl = `https://supabase.com/dashboard/project/vucvdpamtrjkzmubwlts/editor/229472?sort=created_at:desc&filter=component_id:eq:${submission.component_data.id}`;
    return (_jsx("div", { className: "border rounded-lg p-6 hover:shadow-md transition-shadow", children: _jsxs("div", { className: "flex flex-col md:flex-row gap-6", children: [_jsx("div", { className: "md:w-1/4", children: submission.preview_url && (_jsx("div", { className: "aspect-video rounded-md overflow-hidden", children: _jsx("img", { src: submission.preview_url, alt: submission.name, className: "w-full h-full object-cover" }) })) }), _jsxs("div", { className: "md:w-3/4 space-y-4", children: [_jsxs("div", { className: "flex justify-between", children: [_jsxs("h2", { className: "text-xl font-semibold", children: [submission.component_data.name, " ", submission.name && `| ${submission.name}`] }), _jsx("div", { className: "flex items-center space-x-2", children: _jsx("span", { className: `px-2 py-1 text-xs rounded-full ${!submission.submission_status
                                            ? "bg-gray-200 text-gray-800"
                                            : submission.submission_status === "on_review"
                                                ? "bg-yellow-200 text-yellow-800"
                                                : submission.submission_status === "posted"
                                                    ? "bg-green-200 text-green-800"
                                                    : submission.submission_status === "rejected"
                                                        ? "bg-red-200 text-red-800"
                                                        : "bg-blue-200 text-blue-800"}`, children: submission.submission_status || "No Status" }) })] }), _jsxs("div", { className: "text-sm text-gray-500 grid grid-cols-1 md:grid-cols-2 gap-2", children: [_jsxs("div", { children: [_jsxs("p", { children: ["By:", " ", submission.user_data.display_name ||
                                                    submission.user_data.username] }), _jsxs("p", { children: ["Component ID: ", submission.component_data.id] }), _jsxs("p", { children: ["Submitted:", " ", new Date(submission.updated_at).toLocaleDateString()] })] }), _jsxs("div", { children: [_jsxs("p", { children: [_jsx("span", { className: "font-medium", children: "Component:" }), " ", submission.component_data.name] }), _jsxs("p", { children: [_jsx("span", { className: "font-medium", children: "Component Slug:" }), " ", _jsx("span", { className: "font-mono text-xs", children: submission.component_data.component_slug })] }), _jsxs("p", { children: [_jsx("span", { className: "font-medium", children: "Demo Name:" }), " ", submission.name || "—"] }), _jsxs("p", { children: [_jsx("span", { className: "font-medium", children: "Demo Slug:" }), " ", _jsx("span", { className: "font-mono text-xs", children: submission.demo_slug || "—" })] })] })] }), submission.moderators_feedback && (_jsxs("div", { className: "mt-4 p-3 rounded-lg border", children: [_jsx("p", { className: "text-sm font-medium", children: "Feedback:" }), _jsx("p", { className: "text-sm text-gray-600", children: submission.moderators_feedback })] })), _jsxs("div", { className: "flex flex-wrap gap-3 pt-4", children: [_jsx(Button, { variant: "outline", size: "sm", asChild: true, children: _jsx(Link, { href: `/${submission.user_data.username}/${submission.component_data.component_slug}/${submission.demo_slug}`, target: "_blank", children: "View Component" }) }), _jsx(Button, { variant: "outline", size: "sm", onClick: () => onManage(submission), children: "Manage Submission" }), _jsx(Button, { variant: "outline", size: "sm", onClick: () => onEditDemo(submission), children: "Edit Demo Info" }), _jsx(Button, { variant: "secondary", size: "sm", onClick: () => onSetDefaultDemo(submission), children: "Set Default Demo" }), _jsx(Button, { variant: "outline", size: "sm", asChild: true, children: _jsxs(Link, { href: componentSupabaseUrl, target: "_blank", className: "flex items-center gap-1", children: [_jsx(ExternalLink, { size: 14 }), "Open Component in Supabase"] }) }), _jsx(Button, { variant: "outline", size: "sm", asChild: true, children: _jsxs(Link, { href: demoSupabaseUrl, target: "_blank", className: "flex items-center gap-1", children: [_jsx(ExternalLink, { size: 14 }), "Open Demo in Supabase"] }) })] })] })] }) }));
};
export default SubmissionCard;
//# sourceMappingURL=component.js.map