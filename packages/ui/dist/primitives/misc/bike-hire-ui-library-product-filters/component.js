import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button } from '@/components/ui/button';
import { ChevronDown, Filter, Sliders } from 'lucide-react';
import { cn } from '@/lib/utils';
import { DropdownMenu, DropdownMenuContent, DropdownMenuRadioGroup, DropdownMenuRadioItem, DropdownMenuTrigger, } from '@/components/ui/dropdown-menu';
export const ProductFilters = ({ selectedCategory, onCategoryChange, categories, priceSort, onPriceSortChange, onAdvancedFiltersClick, onMobileFiltersClick, sticky = true, className }) => {
    return (_jsx("section", { className: cn("py-6 bg-background border-b border-border/30 backdrop-blur-md bg-background/95", sticky && "sticky top-0 z-20", className), children: _jsx("div", { className: "container mx-auto px-6", children: _jsxs("div", { className: "flex flex-wrap items-center justify-between gap-4", children: [_jsx("div", { className: "flex flex-wrap items-center gap-3", children: _jsxs("div", { className: "flex flex-wrap items-center gap-2", children: [categories.slice(0, 5).map((category) => (_jsx("button", { onClick: () => onCategoryChange(category), className: cn("px-4 py-1.5 rounded-full text-sm font-medium transition-all", selectedCategory === category
                                        ? "bg-accent text-accent-foreground"
                                        : "bg-secondary hover:bg-secondary/70"), children: category.charAt(0).toUpperCase() + category.slice(1) }, category))), categories.length > 5 && (_jsxs(DropdownMenu, { children: [_jsx(DropdownMenuTrigger, { asChild: true, children: _jsxs(Button, { variant: "outline", size: "sm", className: "h-8", children: ["More ", _jsx(ChevronDown, { className: "ml-1 h-4 w-4" })] }) }), _jsx(DropdownMenuContent, { align: "start", children: _jsx(DropdownMenuRadioGroup, { value: selectedCategory, onValueChange: onCategoryChange, children: categories.slice(5).map((category) => (_jsx(DropdownMenuRadioItem, { value: category, children: category.charAt(0).toUpperCase() + category.slice(1) }, category))) }) })] }))] }) }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsxs(DropdownMenu, { children: [_jsx(DropdownMenuTrigger, { asChild: true, children: _jsxs(Button, { variant: "outline", size: "sm", className: "h-9", children: ["Price: ", priceSort === 'asc' ? 'Low to High' : priceSort === 'desc' ? 'High to Low' : 'Sort by', _jsx(ChevronDown, { className: "ml-1 h-4 w-4" })] }) }), _jsx(DropdownMenuContent, { align: "end", children: _jsxs(DropdownMenuRadioGroup, { value: priceSort, onValueChange: (value) => onPriceSortChange(value), children: [_jsx(DropdownMenuRadioItem, { value: "none", children: "Default" }), _jsx(DropdownMenuRadioItem, { value: "asc", children: "Price: Low to High" }), _jsx(DropdownMenuRadioItem, { value: "desc", children: "Price: High to Low" })] }) })] }), onMobileFiltersClick && (_jsxs(Button, { variant: "outline", size: "sm", className: "h-9 md:hidden", onClick: onMobileFiltersClick, children: [_jsx(Filter, { className: "mr-1 h-4 w-4" }), "Filters"] })), onAdvancedFiltersClick && (_jsxs(Button, { variant: "outline", className: "hidden md:flex items-center gap-2 h-9", onClick: onAdvancedFiltersClick, children: [_jsx(Sliders, { className: "h-4 w-4" }), "Advanced Filters"] }))] })] }) }) }));
};
export default ProductFilters;
//# sourceMappingURL=component.js.map