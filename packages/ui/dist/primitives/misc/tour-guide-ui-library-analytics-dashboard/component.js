"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { TrendingUp, BarChart3, Activity, Users } from "lucide-react";
export default function AnalyticsDashboard({ revenueData, activityPerformance, userAnalytics, bookingTrends }) {
    const [activeTab, setActiveTab] = useState("overview");
    // Use real data from props
    const topActivities = activityPerformance.slice(0, 5).map(activity => ({
        name: activity.title,
        bookings: activity.bookings,
        revenue: activity.revenue
    }));
    // Calculate customer segments from real user analytics data
    const totalUsers = (userAnalytics?.newUsers || 0) + (userAnalytics?.returningUsers || 0);
    const customerSegments = [
        {
            segment: "Returning Customers",
            percentage: totalUsers > 0
                ? Math.round(((userAnalytics?.returningUsers || 0) / totalUsers) * 100)
                : 0,
            count: userAnalytics?.returningUsers || 0
        },
        {
            segment: "New Customers",
            percentage: totalUsers > 0
                ? Math.round(((userAnalytics?.newUsers || 0) / totalUsers) * 100)
                : 0,
            count: userAnalytics?.newUsers || 0
        },
        {
            segment: "Premium Members",
            percentage: 5, // This would need a premium membership tracking system
            count: Math.floor(totalUsers * 0.05)
        }
    ];
    // Calculate performance metrics from real data
    const totalRevenue = revenueData.reduce((sum, day) => sum + day.revenue, 0);
    const totalBookings = revenueData.reduce((sum, day) => sum + day.bookings, 0);
    const avgOrderValue = totalBookings > 0 ? totalRevenue / totalBookings : 0;
    const avgRating = activityPerformance.length > 0
        ? activityPerformance.reduce((sum, activity) => sum + activity.rating, 0) / activityPerformance.length
        : 0;
    return (_jsxs("div", { className: "space-y-6", children: [_jsx("div", { className: "border-b border-gray-700", children: _jsx("nav", { className: "flex space-x-8", children: [
                        { id: "overview", label: "Overview", icon: BarChart3 },
                        { id: "revenue", label: "Revenue", icon: TrendingUp },
                        { id: "customers", label: "Customers", icon: Users },
                        { id: "activities", label: "Activities", icon: Activity }
                    ].map(tab => {
                        const Icon = tab.icon;
                        return (_jsxs("button", { onClick: () => setActiveTab(tab.id), className: `flex items-center space-x-2 border-b-2 px-1 py-4 text-sm font-medium transition-colors ${activeTab === tab.id
                                ? "border-orange-500 text-orange-500"
                                : "border-transparent text-gray-400 hover:border-gray-300 hover:text-gray-300"}`, children: [_jsx(Icon, { className: "size-4" }), _jsx("span", { children: tab.label })] }, tab.id));
                    }) }) }), activeTab === "overview" && (_jsxs("div", { className: "grid grid-cols-1 gap-6 lg:grid-cols-2", children: [_jsxs("div", { className: "rounded-lg border border-gray-700 bg-gray-800 p-6", children: [_jsx("h3", { className: "mb-4 text-lg font-semibold text-white", children: "Revenue Trend" }), revenueData.length > 0 ? (_jsx("div", { className: "flex h-64 items-end justify-between space-x-2", children: revenueData.slice(-6).map((data, index) => {
                                    const maxRevenue = Math.max(...revenueData.map(d => d.revenue));
                                    const height = maxRevenue > 0 ? (data.revenue / maxRevenue) * 200 : 0;
                                    return (_jsxs("div", { className: "flex flex-1 flex-col items-center", children: [_jsx("div", { className: "w-full rounded-t bg-orange-500 transition-all duration-300 hover:bg-orange-400", style: { height: `${height}px` }, title: `â‚¬${data.revenue.toLocaleString()}` }), _jsx("span", { className: "mt-2 text-sm text-gray-400", children: new Date(data.date).toLocaleDateString("en", {
                                                    month: "short",
                                                    day: "numeric"
                                                }) })] }, data.date));
                                }) })) : (_jsx("div", { className: "flex h-64 items-center justify-center text-gray-400", children: "No revenue data available" }))] }), _jsxs("div", { className: "rounded-lg border border-gray-700 bg-gray-800 p-6", children: [_jsx("h3", { className: "mb-4 text-lg font-semibold text-white", children: "Top Activities" }), topActivities.length > 0 ? (_jsx("div", { className: "space-y-3", children: topActivities.map((activity, index) => (_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsxs("span", { className: "text-sm font-bold text-orange-500", children: ["#", index + 1] }), _jsx("span", { className: "text-white", children: activity.name })] }), _jsxs("div", { className: "text-right", children: [_jsxs("p", { className: "font-medium text-green-400", children: ["\u20AC", activity.revenue.toLocaleString()] }), _jsxs("p", { className: "text-sm text-gray-400", children: [activity.bookings, " bookings"] })] })] }, activity.name))) })) : (_jsx("div", { className: "flex h-32 items-center justify-center text-gray-400", children: "No activity data available" }))] }), _jsxs("div", { className: "rounded-lg border border-gray-700 bg-gray-800 p-6", children: [_jsx("h3", { className: "mb-4 text-lg font-semibold text-white", children: "Customer Segments" }), _jsx("div", { className: "space-y-4", children: customerSegments.map(segment => (_jsxs("div", { children: [_jsxs("div", { className: "mb-2 flex items-center justify-between", children: [_jsx("span", { className: "text-sm text-white", children: segment.segment }), _jsxs("span", { className: "text-sm text-gray-400", children: [segment.percentage, "%"] })] }), _jsx("div", { className: "h-2 w-full rounded-full bg-gray-700", children: _jsx("div", { className: "h-2 rounded-full bg-orange-500 transition-all duration-300", style: { width: `${segment.percentage}%` } }) }), _jsxs("p", { className: "mt-1 text-xs text-gray-400", children: [segment.count, " customers"] })] }, segment.segment))) })] }), _jsxs("div", { className: "rounded-lg border border-gray-700 bg-gray-800 p-6", children: [_jsx("h3", { className: "mb-4 text-lg font-semibold text-white", children: "Performance Metrics" }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { className: "text-center", children: [_jsxs("div", { className: "mb-2 flex items-center justify-center", children: [_jsx(TrendingUp, { className: "mr-2 size-5 text-green-400" }), _jsx("span", { className: "text-2xl font-bold text-green-400", children: avgRating > 0 ? `${avgRating.toFixed(1)}/5` : "N/A" })] }), _jsx("p", { className: "text-sm text-gray-400", children: "Average Rating" })] }), _jsxs("div", { className: "text-center", children: [_jsxs("div", { className: "mb-2 flex items-center justify-center", children: [_jsx(TrendingUp, { className: "mr-2 size-5 text-blue-400" }), _jsx("span", { className: "text-2xl font-bold text-blue-400", children: totalBookings })] }), _jsx("p", { className: "text-sm text-gray-400", children: "Total Bookings" })] }), _jsxs("div", { className: "text-center", children: [_jsxs("div", { className: "mb-2 flex items-center justify-center", children: [_jsx(TrendingUp, { className: "mr-2 size-5 text-purple-400" }), _jsxs("span", { className: "text-2xl font-bold text-purple-400", children: ["\u20AC", avgOrderValue.toFixed(0)] })] }), _jsx("p", { className: "text-sm text-gray-400", children: "Avg. Order Value" })] }), _jsxs("div", { className: "text-center", children: [_jsxs("div", { className: "mb-2 flex items-center justify-center", children: [_jsx(TrendingUp, { className: "mr-2 size-5 text-yellow-400" }), _jsx("span", { className: "text-2xl font-bold text-yellow-400", children: userAnalytics?.userGrowth
                                                            ? `${userAnalytics.userGrowth.toFixed(1)}%`
                                                            : "N/A" })] }), _jsx("p", { className: "text-sm text-gray-400", children: "User Growth" })] })] })] })] })), activeTab === "revenue" && (_jsx("div", { className: "space-y-6", children: _jsxs("div", { className: "rounded-lg border border-gray-700 bg-gray-800 p-6", children: [_jsx("h3", { className: "mb-4 text-lg font-semibold text-white", children: "Revenue Analytics" }), revenueData.length > 0 ? (_jsx("div", { className: "space-y-4", children: _jsxs("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-3", children: [_jsxs("div", { className: "text-center", children: [_jsxs("p", { className: "text-2xl font-bold text-green-400", children: ["\u20AC", totalRevenue.toLocaleString()] }), _jsx("p", { className: "text-sm text-gray-400", children: "Total Revenue" })] }), _jsxs("div", { className: "text-center", children: [_jsx("p", { className: "text-2xl font-bold text-blue-400", children: totalBookings }), _jsx("p", { className: "text-sm text-gray-400", children: "Total Bookings" })] }), _jsxs("div", { className: "text-center", children: [_jsxs("p", { className: "text-2xl font-bold text-purple-400", children: ["\u20AC", avgOrderValue.toFixed(2)] }), _jsx("p", { className: "text-sm text-gray-400", children: "Average Order Value" })] })] }) })) : (_jsx("p", { className: "text-gray-400", children: "No revenue data available" }))] }) })), activeTab === "customers" && (_jsx("div", { className: "space-y-6", children: _jsxs("div", { className: "rounded-lg border border-gray-700 bg-gray-800 p-6", children: [_jsx("h3", { className: "mb-4 text-lg font-semibold text-white", children: "Customer Analytics" }), userAnalytics ? (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-3", children: [_jsxs("div", { className: "text-center", children: [_jsx("p", { className: "text-2xl font-bold text-green-400", children: userAnalytics.newUsers }), _jsx("p", { className: "text-sm text-gray-400", children: "New Users" })] }), _jsxs("div", { className: "text-center", children: [_jsx("p", { className: "text-2xl font-bold text-blue-400", children: userAnalytics.returningUsers }), _jsx("p", { className: "text-sm text-gray-400", children: "Returning Users" })] }), _jsxs("div", { className: "text-center", children: [_jsxs("p", { className: "text-2xl font-bold text-purple-400", children: [userAnalytics.userGrowth.toFixed(1), "%"] }), _jsx("p", { className: "text-sm text-gray-400", children: "User Growth" })] })] }), _jsxs("div", { children: [_jsx("h4", { className: "text-md mb-3 font-semibold text-white", children: "Top Locations" }), _jsx("div", { className: "space-y-2", children: userAnalytics.topLocations.map(location => (_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-white", children: location.location }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs("span", { className: "text-gray-400", children: [location.users, " users"] }), _jsxs("span", { className: "text-orange-500", children: [location.percentage, "%"] })] })] }, location.location))) })] }), _jsxs("div", { children: [_jsx("h4", { className: "text-md mb-3 font-semibold text-white", children: "Age Groups" }), _jsx("div", { className: "space-y-2", children: userAnalytics.ageGroups.map(group => (_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-white", children: group.range }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs("span", { className: "text-gray-400", children: [group.count, " users"] }), _jsxs("span", { className: "text-orange-500", children: [group.percentage, "%"] })] })] }, group.range))) })] })] })) : (_jsx("p", { className: "text-gray-400", children: "No customer analytics available" }))] }) })), activeTab === "activities" && (_jsx("div", { className: "space-y-6", children: _jsxs("div", { className: "rounded-lg border border-gray-700 bg-gray-800 p-6", children: [_jsx("h3", { className: "mb-4 text-lg font-semibold text-white", children: "Activity Performance" }), activityPerformance.length > 0 ? (_jsx("div", { className: "space-y-4", children: activityPerformance.map((activity, index) => (_jsx("div", { className: "border-b border-gray-700 pb-4 last:border-b-0", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h4", { className: "font-semibold text-white", children: activity.title }), _jsxs("p", { className: "text-sm text-gray-400", children: ["Rating: ", activity.rating.toFixed(1), "/5"] })] }), _jsxs("div", { className: "text-right", children: [_jsxs("p", { className: "font-bold text-green-400", children: ["\u20AC", activity.revenue.toLocaleString()] }), _jsxs("p", { className: "text-sm text-gray-400", children: [activity.bookings, " bookings"] })] })] }) }, activity.id))) })) : (_jsx("p", { className: "text-gray-400", children: "No activity performance data available" }))] }) }))] }));
}
//# sourceMappingURL=component.js.map